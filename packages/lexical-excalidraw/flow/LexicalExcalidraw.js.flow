/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow strict
 */

import type {
  DOMConversionMap,
  EditorConfig,
  LexicalNode,
  NodeKey,
  RangeSelection,
  LexicalCommand,
} from 'lexical';
import {addClassNamesToElement} from '@lexical/utils';
import {$isElementNode, ElementNode} from 'lexical';
declare export class ExcalidrawNode extends ElementNode {
  __data: string;
  static getType(): string;
  static clone(node: ExcalidrawNode): ExcalidrawNode;
  constructor(data: string, key?: NodeKey): void;
  createDOM(config: EditorConfig): HTMLElement;
  updateDOM(
    prevNode: ExcalidrawNode,
    dom: HTMLElement,
    config: EditorConfig,
  ): boolean;
  static importDOM(): DOMConversionMap | null;
  getData(): string;
  setData(data: string): void;
  insertNewAfter(selection: RangeSelection): null | ElementNode;
  canInsertTextBefore(): false;
  canInsertTextAfter(): false;
  canBeEmpty(): false;
  isInline(): true;
}
type ImageType = 'svg' | 'canvas';

export type ExcalidrawImageProps = {
  /**
   * Configures the export setting for SVG/Canvas
   */
  appState?: Partial<Omit<AppState, 'offsetTop' | 'offsetLeft'>> | null,
  /**
   * The css class applied to image to be rendered
   */
  className?: string,
  /**
   * The Excalidraw elements to be rendered as an image
   */
  elements: NonDeleted<ExcalidrawElement>[],
  /**
   * The height of the image to be rendered
   */
  height?: number | null,
  /**
   * The type of image to be rendered
   */
  imageType?: ImageType,
  /**
   * The css class applied to the root element of this component
   */
  rootClassName?: string | null,
  /**
   * The width of the image to be rendered
   */
  width?: number | null,

  buttonRef: {current: null | HTMLButtonElement},
  isSelected: boolean,
  isResizing: boolean,
  onResizeStart: () => void,
  onResizeEnd: () => void,
  editor: LexicalEditor,
};

export type ExcalidrawImage = (props: ExcalidrawImageProps) => JSX.Element;

declare export function $createExcalidrawNode(
  excalidrawComponent: Excalidraw,
  excalidrawImage: ExcalidrawImage,
  modalComponent: Modal,
): ExcalidrawNode;
declare export function $isExcalidrawNode(
  node: ?LexicalNode,
): boolean %checks(node instanceof ExcalidrawNode);

declare export var INSERT_EXCALIDRAW_COMMAND: LexicalCommand<string | null>;
declare export default function LexicalExcalidrawPlugin(): React$Node;
